from pyscf import gto, scf
import numpy as np
from PyscfToQmcpack import savetoqmcpack


mol = gto.Mole()
mol.verbose = 1
# mol.output = 'out_h2o'
mol.atom = """
O   0.0000000 0.0000000  0.0000000,
H   0.7569685 0.0000000 -0.5858752,
H  -0.7569685 0.0000000 -0.5858752"""
mol.symmetry = 0
mol.unit = "Angstrom"
#mol.cart=True
mol.basis={ "O": gto.basis.parse('''
    O    S
      1.533000E+04           5.080000E-04          -1.150000E-04           0.000000E+00           0.000000E+00
      2.299000E+03           3.929000E-03          -8.950000E-04           0.000000E+00           0.000000E+00
      5.224000E+02           2.024300E-02          -4.636000E-03           0.000000E+00           0.000000E+00
      1.473000E+02           7.918100E-02          -1.872400E-02           0.000000E+00           0.000000E+00
      4.755000E+01           2.306870E-01          -5.846300E-02           0.000000E+00           0.000000E+00
      1.676000E+01           4.331180E-01          -1.364630E-01           0.000000E+00           0.000000E+00
      6.207000E+00           3.502600E-01          -1.757400E-01           0.000000E+00           0.000000E+00
      6.882000E-01          -8.154000E-03           6.034180E-01           0.000000E+00           0.000000E+00
      1.752000E+00           0.0000000E+00          0.0000000E+00          1.000000E+00           0.000000E+00
      2.384000E-01           0.0000000E+00          0.0000000E+00          0.000000E+00           1.000000E+00
O    P
      3.446000E+01           1.592800E-02           0.000000E+00           0.000000E+00
      7.749000E+00           9.974000E-02           0.000000E+00           0.000000E+00
      2.280000E+00           3.104920E-01           0.000000E+00           0.000000E+00
      7.156000E-01           0.0000000E+00          1.000000E+00           0.000000E+00
      2.140000E-01           0.0000000E+00          0.000000E+00           1.000000E+00
O    D
      2.314000E+00           1.000000E+00           0.000000E+00
      6.450000E-01           0.000000E+00           1.000000E+00
O    F
      1.428000E+00           1.0000000
'''),
"H" : gto.basis.parse('''
    H    S
      3.387000E+01           6.068000E-03           0.000000E+00           0.000000E+00
      5.095000E+00           4.530800E-02           0.000000E+00           0.000000E+00
      1.159000E+00           2.028220E-01           0.000000E+00           0.000000E+00
      3.258000E-01           0.0000000E+00          1.000000E+00           0.000000E+00
      1.027000E-01           0.0000000E+00          0.000000E+00           1.000000E+00
H    P
      1.407000E+00           1.000000E+00           0.000000E+00
      3.880000E-01           0.000000E+00           1.000000E+00
H    D
      1.057000E+00           1.0000000
    ''')}
mol.cart=False
mol.build()

myhf = scf.RHF(mol)
b = myhf.get_hcore()
myhf.run()
print(myhf.e_tot)

from pyscf.scf.chkfile import dump_scf
dump_scf(mol, 'h2o.chk', myhf.e_tot, myhf.mo_energy, myhf.mo_coeff, myhf.mo_coeff)

savetoqmcpack(mol, myhf)
